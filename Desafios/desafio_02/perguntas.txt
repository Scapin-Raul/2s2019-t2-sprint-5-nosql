1.	Selecione todos os registros.
db.alunos.find()

2.	Selecione todos os registros e deixe a com apresentação melhor visível.
db.alunos.find().pretty()

3.	Selecione todos os registros em que o nome seja igual a ‘Aya’.
db.alunos.find({nome: "Aya"}).pretty()

4.	Selecione todos os registros em que o aluno nasceu em São Paulo.
db.alunos.find({nasceuEmSp: true}).pretty()

5.	Selecione todos os registros em que contenha a título do livro igual a “Java - Web Developers”.
db.alunos.find({ livros: { $elemMatch: { titulo: "Java - Web Developers" } } }).pretty()

6.	Selecione todos os registros em que a aluna tenha o livro “Clean Code A” e o nome “Helena”. 
db.alunos.find({nome: "Helena", livros: { $elemMatch: { titulo: "Clean Code A" } } }).pretty()


7.	Selecione todos os registros em que a aluna não tenha nascido em sp e tenha o livro Cangaceiro JavaScript.
db.alunos.find({nasceuEmSp: false, livros: { $elemMatch: { titulo: "Cangaceiro JavaScript" } } }).pretty()

8.	Selecione todos os registros em que contenham os alunos que tenham o livro Java – Web Developers ou Clean Code B. Primeiro: realize o exercício com o operador ou e posteriormente realize o exercício com o operador in.
db.alunos.find({ $or : [{livros: { $elemMatch: { titulo: "Java - Web Developers" }}}, {livros:  {$elemMatch: { titulo: "Clean Code B" }}}]}).pretty()

db.alunos.find({ livros: { $elemMatch: { titulo: {$in : ["Java - Web Developers", "Clean Code B"] }}}}).pretty()

9.	Pegue o exercício acima e inclua também aonde o aluno pode ter nascido em sp.
db.alunos.find({ nasceuEmSp:true, $or : [{livros: { $elemMatch: { titulo: "Java - Web Developers" }}}, {livros:  {$elemMatch: { titulo: "Clean Code B" }}}]}).pretty()

10.	Procure todos os alunos que tenham nascido em são paulo ou os livros ‘MySQL’ e ‘MongoDB’.
db.alunos.find({ nasceuEmSp:true, $or : [{livros: { $elemMatch: { titulo: "MySQL" }}}, {livros:  {$elemMatch: { titulo: "MongoDB" }}}]}).pretty()


Exercícios
1.	Selecione todos os registros em que os livros contenham em qualquer parte da palavra, 'Clean'.
db.alunos.find({ livros: { $elemMatch: { titulo: /Clean/ } } }).pretty()

2.	Selecione todos os registros em que os títulos dos livros terminem com a letra 'S'.
db.alunos.find({ livros: { $elemMatch: { titulo: /S$/ } } }).pretty()

3.	Selecione todos os registros em que todos os livros terminem com a letra 't'.
db.alunos.find({ livros: { $elemMatch: { titulo: /t$/ } } }).pretty()

4.	Selecione todos os nomes das alunos terminem com a letra 'k' ou 'o'.
db.alunos.find({ $or : [{nome: /k$/ }, {nome: /o$/ }]}).pretty()

5.	Selecione todos os registros em que os nomes comecem com a letra 'a'.
db.alunos.find({ nome: /^a/ }).pretty()

6.	Selecione todos os registros em que nomes comecem com a letra 'a' ou 'h'.
db.alunos.find({ $or : [{nome: /^a/ }, {nome: /^h/ }]}).pretty()



Ordenação
ordena pelo campo _id de forma crescente
db.alunos.find().sort({_id: 1}).pretty()

ordena pelo campo _id de forma decrescente
db.alunos.find().sort({_id: -1}).pretty()

ordena pelo campo nome de forma crescente e pega o primeiro registro
db.alunos.find().sort({nome: 1}).limit(1).pretty()

seleciona somente o primeiro registro
db.alunos.find().limit(1).pretty()

 
Exercícios
1.	Crie 5 novos registros de alunos.
Deve conter os critérios abaixo. 3 em sp e 2 que não nasceram em sp.
Deve conter pelo menos alguns dos livros colocados: HTML, CSS, Design, JavaScript, Java, C#, MySQL, MongoDB.
A data de nascimento deve ser inferior a data atual.
db.alunos.insertMany([
	
	{ "nome": "Cleiton",      
	"dateOfBirth": "1992-05-11T08:30:00.000Z",   
   	"nasceuEmSp": true,
      	"livros": 	[
		{"titulo":"HTML" , "leu" : true},
		{"titulo": "C#", "leu" :true}    
		]
	 },
   
	{ "nome": "Billy",      
	"dateOfBirth": "1880-02-27T08:30:00.000Z",   
   	"nasceuEmSp": false,
      	"livros": 	[
		{"titulo": "JavaScript" , "leu" : false},
		{"titulo": "MySQL", "leu" : false}    
		]
	 },

	{ "nome": "Diegokk",      
	"dateOfBirth": "2003-04-24T08:30:00.000Z",   
   	"nasceuEmSp": true,
      	"livros": 	[
		{"titulo": "MongoDB" , "leu" : false},
		{"titulo": "Java", "leu" :true}    
		]
	 },

	{ "nome": "Shiba",      
	"dateOfBirth": "2005-03-13T08:30:00.000Z",   
   	"nasceuEmSp": false,
      	"livros": 	[
		{"titulo": "Desing" , "leu" : true},
		{"titulo": "CSS", "leu" :true}    
		]
	 },

	{ "nome": "Riven",      
	"dateOfBirth": "2004-12-12T08:30:00.000Z",   
   	"nasceuEmSp": false,
      	"livros": 	[
		{"titulo": "Combos de Grande Mecanica", "leu" :true}    
		]
	 }
])

 
Exercícios
1.	Atualize os registros criados no exercício anterior, com os filtros abaixo (não se esqueça de buscar pelo _id):
Deixe todos os registros criados acima que estiverem como true para false, e vice-versa. 
Atualize a data de nascimento de 2 alunos.
Inclua pelo menos 3 livros que elas tenham lido.

Exercícios
1.	Exclua 5 itens dada uma determinada condição.
Exemplo:
Por ordenação de inserção, os dois primeiros que foram inseridos.
Por ordem alfabética, os dois primeiros.
Por ordem de signo decrescente, o primeiro signo.





 
Desafio Extra
Por ordem de habilidades, a que possui o maior registro de habilidades.
db.alunos.aggregate([
   {
      $project: {
         item: 1,
         numeroDeHabilidades: { $cond: { if: { $isArray: "$habilidades" }, then: { $size: "$habilidades" }, else: "NA"} }
      }
   }
] )
Verificar o registro que possui a maior quantidade de habilidades.
db.alunos.find({ _id : ObjectId("5d811ade31c542921b14417b") }).sort({ _id : -1 }).limit(3).pretty()
Com ordenação
db.alunos.aggregate([
   {
      $project: {
         item: 1,
         numeroDeHabilidades: { $cond: { if: { $isArray: "$habilidades" }, then: { $size: "$habilidades" }, else: "NA"} }
      }
   },
{ $sort: { numeroDeHabilidades: 1 } }
] ) 
















[    {      "nome": "Helena",      "dateOfBirth": "1993-03-18T08:30:00.000Z",      "nasceuEmSp": true,      "livros": [        {"titulo":"Java - Web Developers" , "leu" : true},        {"titulo": "Eloquente JavaScript", "leu" :true},        {"titulo": "Clean Code A", "leu":true},        {"titulo": "Clean Architecture", "leu" :true}    ]    },    {      "nome": "Izadora",      "dateOfBirth": "1990-07-18T08:30:00.000Z",      "nasceuEmSp": true,      "livros": [        {"titulo":"You dont know JS" , "leu" :false},        {"titulo": "Eloquente JavaScript", "leu" : false},        {"titulo": "Clean Code A", "leu":true},        {"titulo": "Cangaceiro JavaScript", "leu" : false}    ]    },    {      "nome": "Luanda",      "dateOfBirth": "1990-07-18T08:30:00.000Z",      "nasceuEmSp": false,
      "livros": [        {"titulo":"You dont know JS" , "leu" :false},        {"titulo": "Eloquente JavaScript", "leu" :true},        {"titulo": "Clean Code A", "leu":false},        {"titulo": "ECMA Script 6", "leu" : false}    ]    },    {      "nome": "Larissa",      "dateOfBirth": "1990-01-10T08:30:00.000Z",      "nasceuEmSp": true,      "livros": [        {"titulo":"You dont know JS" , "leu" : true},        {"titulo": "Eloquente JavaScript", "leu" : false},        {"titulo": "Lógica de Programação", "leu":false},        {"titulo": "Cangaceiro JavaScript", "leu" : false}    ]    },    {      "nome": "Maria do Bairro",      "dateOfBirth": "1990-01-18T08:30:00.000Z",      "nasceuEmSp": true,      "livros": [        {"titulo":"You dont know JS" , "leu" :false},        {"titulo": "Eloquente JavaScript", "leu" : false},        {"titulo": "Clean Code B", "leu":false},        {"titulo": "Cangaceiro JavaScript", "leu" : false}    ]    },    {      "nome": "Arya Stark",      "dateOfBirth": "1990-03-10T08:30:00.000Z",      "nasceuEmSp": false,      "livros": [        {"titulo":"You dont know JS" , "leu" : true},        {"titulo": "Eloquente JavaScript", "leu" : false},        {"titulo": "Clean Code B", "leu":true},        {"titulo": "Cangaceiro JavaScript", "leu" : false}    ]    },    {      "nome": "Frida",      "dateOfBirth": "1990-03-18T08:30:00.000Z",      "nasceuEmSp": false,      "livros": [        {"titulo":"You dont know JS" , "leu" : true},        {"titulo": "Eloquente JavaScript", "leu" :true},        {"titulo": "Clean Code", "leu":true},        {"titulo": "Cangaceiro JavaScript", "leu" : false}    ]    },    {      "nome": "Aya",      "dateOfBirth": "1993-03-18T08:30:00.000Z",      "nasceuEmSp": true,      "livros": [            {"titulo":"You dont know JS" , "leu" :false},            {"titulo": "Eloquente JavaScript", "leu" :true},            {"titulo": "Clean Code B", "leu":false},{"titulo": "Cangaceiro JavaScript", "leu" :true}]}]
